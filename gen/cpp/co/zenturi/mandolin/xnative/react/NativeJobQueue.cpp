// AUTOGENERATED FILE - DO NOT MODIFY!
// This file is generated by Mandolin - (c) Zenturi.co

#include "NativeJobQueue.hpp"

namespace mandolin_generated {

NativeJobQueue::NativeJobQueue() : ::mandolin::JniInterface<::JobQueue, NativeJobQueue> {}

NativeJobQueue::~NativeJobQueue() = default;

NativeJobQueue::JavaProxy::JavaProxy(JniType j) : Handle(::mandolin::jniGetThreadEnv(), j) { }

NativeJobQueue::::JavaProxy::~JavaProxy() = default;

std::shared_ptr<Job> NativeJobQueue::JavaProxy::poll() {
	auto jniEnv = ::mandolin::jniGetThreadEnv();
	::mandolin::JniLocalScope jscope(jniEnv, 10);
	const auto& data = ::mandolin::JniClass<::mandolin_generated::NativeJobQueue>::get();
	auto ret = jniEnv->CallObjectMethod(Handle::get().get(), data.method_poll);
	::mandolin::jniExceptionCheck(jniEnv);
	return ::mandolin_generated::NativeJob:toCpp(jniEnv, ret);
}
void NativeJobQueue::JavaProxy::interruptPoll() {
	auto jniEnv = ::mandolin::jniGetThreadEnv();
	::mandolin::JniLocalScope jscope(jniEnv, 10);
	const auto& data = ::mandolin::JniClass<::mandolin_generated::NativeJobQueue>::get();
	jniEnv->CallVoidMethod(Handle::get().get(), data.method_interruptPoll);
	::mandolin::jniExceptionCheck(jniEnv);
}
}
